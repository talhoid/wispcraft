!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";const e=WebSocket,t=new TextEncoder;t.encode.bind(t);const s=new TextDecoder;s.decode.bind(s);class i{constructor(e){this.binaryType="blob",this.readyState="",this.url=e,this.eventListeners=[],this.handshook=!1,this.loggedIn=!1,this.compression=-1,this.eag2wispQueue=[],this.username="___",this.ipPort=e.slice(e.lastIndexOf("/")+1).split(":",2),(this.ipPort.length<2||!+this.ipPort[1])&&(this.ipPort[1]=25565),this.ipPort[1]=+this.ipPort[1],this.wispStream=new oldWS("wss://anura.pro/"+this.ipPort[0]+":"+this.ipPort[1]),this.wispStream.binaryType="arraybuffer",this.wispStream.onclose=e=>{this.emit("close",e.code)},this.wispStream.onopen=()=>{this.emit("open",{})};let t=[];this.wispStream.onmessage=async e=>{await navigator.locks.request("fart",(async()=>{const s=[...t,...new Uint8Array(e.data)];t=[];const i=readVarInt(s);if(i.length<2)return void(t=s);const n=i[0],r=i[1];if(s.length<r+n)return void(t=s);let a,o,h,c;if(this.compression>=0){const e=readVarInt(s.slice(r,r+n));if(e.length<2)return void(t=s);let i=e[0];const l=e[1],m=s.slice(r+l,r+n);if(m.length!=n-l)return void(t=s);const p=[];if(0==i)i=n-l,p.push(...m);else{const e=new Blob([new Uint8Array(m)]).stream();try{const t=e.pipeThrough(new DecompressionStream("deflate"));for await(const e of t)p.push(...e)}catch(e){return void(t=s)}}if(p.length!=i)return void(t=s);if(a=readVarInt(p.slice(0,i)),a.length<2)return void(t=s);o=a[0],h=a[1],c=p.slice(h,i),t=s.slice(r+l+m.length)}else{if(a=readVarInt(s.slice(r,r+n)),a.length<2)return void(t=s);o=a[0],h=a[1],c=s.slice(r+h,r+n),t=s.slice(r+n)}if(this.loggedIn)70==o?this.compression=readVarInt(c)[0]:this.emit("message",{data:ba2ab([...makeVarInt(o),...c])});else if(3==o)this.compression=readVarInt(c)[0];else if(2==o){this.emit("message",{data:ba2ab([PROTOCOL_SERVER_FINISH_LOGIN])}),this.loggedIn=!0;for(let e of this.eag2wispQueue){const t=readVarInt(e);e=this.compression>=0?new Uint8Array(ba2ab(await makeCompressedPacket(t[0],e.slice(t[1]),this.compression))):new Uint8Array(ba2ab(makePacket(t[0],e.slice(t[1])))),this.wispStream.send(e)}this.eag2wispQueue=[]}else 0==o&&this.wispStream.close()}))}}emit(e,t){this["on"+(e=e.toLowerCase())]&&this["on"+e](t),this.eventListeners[e]&&this.eventListeners[e].forEach((e=>e(t)))}close(e){this.wispStream&&this.wispStream.close(e)}async send(e){if(this.wispStream){if(!this.handshook){switch(e[0]){case PROTOCOL_CLIENT_VERSION:this.emit("message",{data:ba2ab([PROTOCOL_SERVER_VERSION,0,3,0,47,0,0,0,0,0])});break;case PROTOCOL_CLIENT_REQUEST_LOGIN:const t=e.slice(2,e[1]+2);this.username=(new TextDecoder).decode(t),this.emit("message",{data:ba2ab([PROTOCOL_SERVER_ALLOW_LOGIN,this.username.length,...t,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])});break;case PROTOCOL_CLIENT_PROFILE_DATA:break;case PROTOCOL_CLIENT_FINISH_LOGIN:this.handshook=!0,this.wispStream.send(new Uint8Array(ba2ab(makePacket(0,[...makeVarInt(47),...makeString(this.ipPort[0]),...makeShort(this.ipPort[1]),...makeVarInt(2)])))),this.wispStream.send(new Uint8Array(ba2ab(makePacket(0,[...makeString(this.username)]))))}return}if(this.loggedIn){const t=readVarInt(e);e=this.compression>=0?new Uint8Array(ba2ab(await makeCompressedPacket(t[0],e.slice(t[1]),this.compression))):new Uint8Array(ba2ab(makePacket(t[0],e.slice(t[1])))),this.wispStream.send(e)}else this.eag2wispQueue.push(e)}}addEventListener(e,t){e=e.toLowerCase(),this.eventListeners[e]?this.eventListeners[e].push(callback):this.eventListeners[e]=[t]}removeEventListener(e,t){e=e.toLowerCase(),this.eventListeners[e]&&(t&&this.eventListeners[e].includes(t)?(this.eventListeners[e]=this.eventListeners[e].filter((e=>e!=t)),0==this.eventListeners[e].length&&delete this.eventListeners[e]):t||delete this.eventListeners[e])}}window.WebSocket=class{constructor(t,s){(""+t).toLowerCase().includes("://java://")?this.impl=new i(t):this.impl=new e(t,s)}get binaryType(){return this.impl.binaryType}set binaryType(e){this.impl.binaryType=e}get readyState(){return this.impl.readyState}get url(){return this.impl.url}set onopen(e){this.impl.onopen=e}set onclose(e){this.impl.onclose=e}set onmessage(e){this.impl.onmessage=e}set onerror(e){this.impl.onerror=e}close(e){return this.impl.close(e)}send(e){return this.impl.send(e)}addEventListener(e,t){return this.impl.addEventListener(e,t)}removeEventListener(e,t){return this.impl.removeEventListener(e,t)}}}));
//# sourceMappingURL=index.js.map
